# author:xuyutao
# contact: 1026310947@qq.com
# datetime:2023/4/14 17:15
# software: PyCharm

"""
文件说明：
这里给出app1和app13的示例
"""
import matplotlib.pyplot as plt
import numpy as np
import numpy as np
from matplotlib import pyplot as plt, ticker
from scipy.interpolate import make_interp_spline

from evaluate.apfd import get_apfd, get_apfd_items, get_apfd_items1
from pipeline.earlyfusion_sim import sim_cat
from prioritization.art import art_sim_matrix_new, art_sim_matrix
from text_feature.distance import get_distance_cos
#
test13 = ["bert", "word2vec", "ocr_tfidf", "tfidf", "gist_res", "CEDD_RES", "spm_RES"]
app_path = "../data/reports/" + str(1) + "/" + "app" + str(1) + ".csv"
sim_matrix = sim_cat(test13, 1)
sequence = art_sim_matrix_new(sim_matrix)
# sequence = average(test9,num)
apfd = get_apfd(app_path, sequence)
items = get_apfd_items(app_path, sequence)
sequence1 = ['497', '687', '1063', '684', '759', '725', '516', '460', '688', '1121', '1072', '702', '509', '706',
             '1103', '490', '773', '1039', '449', '1054', '511', '723', '733', '765', '699', '747', '772', '1080',
             '692', '1066', '791', '1084', '503', '691', '774', '482', '731', '491', '471', '741', '685', '1107',
             '1059', '1085', '1089', '1115', '695', '445', '728', '708', '654', '749', '658', '727', '703', '769',
             '500', '453', '700', '649', '795', '672', '478', '1036', '661', '720', '1046', '662', '778', '474', '488',
             '707', '1082', '455', '782', '464', '712', '714', '1110', '1075', '1087', '476', '499', '456', '1037',
             '1055', '1068', '1095', '1057', '790', '651', '721', '663', '660', '495', '655', '705', '1058', '514',
             '701', '1119', '650', '718', '726', '1052', '710', '784', '508', '1070', '1108', '1074', '506', '1050',
             '1118', '667', '779', '1088', '1041', '730', '1097', '694', '1116', '1073', '489', '719', '1090', '440',
             '677', '481', '439', '783', '1077', '1062', '1078', '1094', '669', '666', '744', '674', '468', '1114',
             '760', '1045', '1109', '498', '1124', '493', '1122', '745', '787', '507', '1076', '732', '690', '676',
             '729', '444', '664', '480', '679', '1100', '734', '470', '1105', '793', '1061', '1081', '1123', '1071',
             '448', '736', '768', '1033', '777', '746', '781', '472', '1060', '1117', '722', '1099', '716', '704',
             '1051', '698', '1056', '748', '673', '771', '1053', '1092', '436', '775', '463', '1091', '1086', '770',
             '1125', '671', '1101', '668', '786', '738', '484', '1044', '656', '1111', '740', '717', '469', '1038',
             '709', '1032', '766', '659', '1093', '683', '473', '519', '452', '457', '1048', '467', '451', '428', '502',
             '1096', '1040', '459', '754', '477', '505', '1069', '492', '518', '697', '678', '1065', '431', '1120',
             '780', '487', '1104', '438', '1106', '461', '437', '462', '486', '504', '515', '1035', '1083', '1043',
             '483', '1102', '454', '1064', '1098', '466', '433', '1049', '427', '426', '764', '485', '776', '1042',
             '1113', '425', '441', '432', '751', '789', '424', '752']
items1 = get_apfd_items1(app_path, sequence1)
x1 = [i for i in range(277)]
x2 = x1
x3 = x2
y1 = []
y2 = [0 for i in range(277)]
y3 = [0 for i in range(277)]
for i in range(21):
    y1.append(i)
for i in range(256):
    y1.append(20)
n = 1
for i in items:
    y2[i + 1] = n
    n += 1
for i in range(len(y2)):
    if y2[i] == 0 and i != 0:
        y2[i] = y2[i - 1]
n = 1
for i in items1:
    y3[i + 1] = n
    n += 1
for i in range(len(y3)):
    if y3[i] == 0 and i != 0:
        y3[i] = y3[i - 1]
from matplotlib import rcParams

# plt.figure(dpi=300)
string = r'D{\scriptsize EEP}P{\scriptsize RIOR}'
rcParams['text.usetex'] = True


def smooth_xy(lx, ly):
    x = np.array(lx)
    y = np.array(ly)
    x_smooth = np.linspace(x.min(), x.max(), 300)
    y_smooth = make_interp_spline(x, y)(x_smooth)
    return [x_smooth, y_smooth]


xy1 = smooth_xy(x1, y1)
xy2 = smooth_xy(x2, y2)
xy3 = smooth_xy(x3, y3)
plt.plot(x1, y1, 'g.--', label='Ideal', linestyle='-', markersize='1', markeredgewidth=2)
plt.plot(x2, y2, 'r.--', label='Fusion', linestyle='-', markersize='1', markeredgewidth=2)
plt.plot(x3, y3, 'b.--', label=string, linestyle='-', markersize='1', markeredgewidth=2)  # '# '
plt.legend()  # 显示上面的label
plt.title('A1', font={'family': 'Arial', 'size': 18})
plt.xlabel('number of reports', font={'family': 'Arial', 'size': 16})
plt.ylabel('number of bug categories', font={'family': 'Arial', 'size': 16})
plt.gca().yaxis.set_major_locator(ticker.MultipleLocator(2))
plt.show()

plt.savefig("app1.png", format="png")
app_path = "../data/reports/" + str(18) + "/" + "app" + str(18) + ".csv"
sim_matrix = sim_cat(test13, 18)
sequence = art_sim_matrix_new(sim_matrix)
# sequence = average(test9,num)
# apfd = get_apfd(app_path, sequence)
items = get_apfd_items(app_path, sequence)
# sequence1 = ['497', '687', '1063', '684', '759', '725', '516', '460', '688', '1121', '1072', '702', '509', '706', '1103', '490', '773', '1039', '449', '1054', '511', '723', '733', '765', '699', '747', '772', '1080', '692', '1066', '791', '1084', '503', '691', '774', '482', '731', '491', '471', '741', '685', '1107', '1059', '1085', '1089', '1115', '695', '445', '728', '708', '654', '749', '658', '727', '703', '769', '500', '453', '700', '649', '795', '672', '478', '1036', '661', '720', '1046', '662', '778', '474', '488', '707', '1082', '455', '782', '464', '712', '714', '1110', '1075', '1087', '476', '499', '456', '1037', '1055', '1068', '1095', '1057', '790', '651', '721', '663', '660', '495', '655', '705', '1058', '514', '701', '1119', '650', '718', '726', '1052', '710', '784', '508', '1070', '1108', '1074', '506', '1050', '1118', '667', '779', '1088', '1041', '730', '1097', '694', '1116', '1073', '489', '719', '1090', '440', '677', '481', '439', '783', '1077', '1062', '1078', '1094', '669', '666', '744', '674', '468', '1114', '760', '1045', '1109', '498', '1124', '493', '1122', '745', '787', '507', '1076', '732', '690', '676', '729', '444', '664', '480', '679', '1100', '734', '470', '1105', '793', '1061', '1081', '1123', '1071', '448', '736', '768', '1033', '777', '746', '781', '472', '1060', '1117', '722', '1099', '716', '704', '1051', '698', '1056', '748', '673', '771', '1053', '1092', '436', '775', '463', '1091', '1086', '770', '1125', '671', '1101', '668', '786', '738', '484', '1044', '656', '1111', '740', '717', '469', '1038', '709', '1032', '766', '659', '1093', '683', '473', '519', '452', '457', '1048', '467', '451', '428', '502', '1096', '1040', '459', '754', '477', '505', '1069', '492', '518', '697', '678', '1065', '431', '1120', '780', '487', '1104', '438', '1106', '461', '437', '462', '486', '504', '515', '1035', '1083', '1043', '483', '1102', '454', '1064', '1098', '466', '433', '1049', '427', '426', '764', '485', '776', '1042', '1113', '425', '441', '432', '751', '789', '424', '752']
sequence18 = ['553', '605', '520', '863', '898', '798', '954', '890', '563', '820', '797', '952', '828', '594', '963',
              '902', '862', '975', '840', '957', '533', '906', '576', '610', '833', '548', '587', '529', '909', '959',
              '535', '922', '949', '824', '948', '836', '830', '835', '816', '908', '559', '839', '532', '974', '977',
              '930', '567', '536', '933', '953', '878', '561', '809', '799', '609', '950', '599', '582', '896', '812',
              '826', '877', '613', '914', '982', '899', '873', '903', '920', '818', '823', '865', '556', '870', '584',
              '808', '872', '814', '841', '857', '867', '545', '528', '837', '619', '568', '961', '864', '901', '617',
              '806', '869', '894', '581', '819', '853', '912', '802', '900', '612', '547', '925', '935', '966', '851',
              '861', '939', '934', '917', '990', '845', '905', '868', '918', '805', '534', '569', '938', '973', '602',
              '578', '575', '552', '850', '958', '608', '817', '555', '838', '879', '601', '593', '942', '551', '866',
              '941', '573', '577', '821', '810', '886', '919', '859', '622', '855', '571', '557', '847', '527', '620',
              '592', '987', '572', '967', '616', '624', '986', '550', '931', '969', '554', '891', '522', '558', '983',
              '924', '800', '607', '970', '597', '596', '943', '858', '631', '564', '944', '825', '964', '525', '882',
              '807', '893', '951', '883', '815', '524', '884', '537', '981', '871', '876', '978', '804', '530', '910',
              '588', '811', '955', '923', '585', '813', '598', '968', '560', '526', '875', '531', '854', '907', '591',
              '615', '630', '921', '895', '989', '539', '976', '904', '621', '947', '929', '897', '834', '832', '940',
              '892', '972', '614', '946', '960', '848', '962', '937', '540', '565', '546', '590', '574', '913', '544',
              '523', '980', '846', '916', '889', '956', '888', '589', '543', '570', '927', '801', '911', '842', '985',
              '984', '822', '562', '880', '856', '852', '926', '827', '843', '583', '831', '932', '915', '803', '928',
              '541', '860', '849', '549', '542', '885', '887', '538', '874', '829', '580', '965', '618', '566', '881',
              '936', '844', '988', '979', '603', '625', '627', '626', '628']

items1 = get_apfd_items1(app_path, sequence18)
x1 = [i for i in range(295)]
x2 = x1
x3 = x2
y1 = []
y2 = [0 for i in range(295)]
y3 = [0 for i in range(295)]
for i in range(13):
    y1.append(i)
for i in range(282):
    y1.append(12)
n = 1
for i in items:
    y2[i + 1] = n
    n += 1
for i in range(len(y2)):
    if y2[i] == 0 and i != 0:
        y2[i] = y2[i - 1]
n = 1
for i in items1:
    y3[i + 1] = n
    n += 1
for i in range(len(y3)):
    if y3[i] == 0 and i != 0:
        y3[i] = y3[i - 1]


def smooth_xy(lx, ly):
    x = np.array(lx)
    y = np.array(ly)
    x_smooth = np.linspace(x.min(), x.max(), 300)
    y_smooth = make_interp_spline(x, y)(x_smooth)
    return [x_smooth, y_smooth]


xy1 = smooth_xy(x1, y1)
xy2 = smooth_xy(x2, y2)
xy3 = smooth_xy(x3, y3)

plt.figure(dpi=300)

plt.plot(x1, y1, 'g.--', label='Ideal', linestyle='-', markersize='1', markeredgewidth=2)
plt.plot(x2, y2, 'r.--', label='Fusion', linestyle='-', markersize='1', markeredgewidth=2)
plt.plot(x3, y3, 'b.--', label=string, linestyle='-', markersize='1', markeredgewidth=2)  # '# '
plt.legend()  # 显示上面的label
plt.title('A18', font={'family': 'Arial', 'size': 18})
plt.xlabel('number of reports', font={'family': 'Arial', 'size': 16})
plt.ylabel('number of bug categories', font={'family': 'Arial', 'size': 16})
plt.gca().yaxis.set_major_locator(ticker.MultipleLocator(2))
plt.show()
plt.savefig("app18.png", format="png")
"""
for uses in all_list:
    print(uses)
    for num in [nums]:
        app_path = "../data/reports/" + str(num) + "/" + "app" + str(num) + ".csv"
        sim_matrix = sim_cat(test9,num)
        sequence = art_sim_matrix_new(sim_matrix)
        # sequence = average(test9,num)
        # apfd = get_apfd(app_path, sequence)
        items = get_apfd_items(app_path, sequence)
"""